name: Python application

on:
  push:
    branches:
      - "*"  # Run on all branches for any push events
  pull_request:
    branches:
      - "*"  # Run on all branches for any pull request events

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: SWEN732
          POSTGRES_PASSWORD: kl,.
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U SWEN732"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure the full history is fetched

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r equipay/server/requirements.txt
          pip install coverage

      - name: Install Codecov CLI
        run: |
          curl -Os https://cli.codecov.io/latest/linux/codecov
          chmod +x codecov
          sudo mv codecov /usr/local/bin/
          
      - name: Set environment variables
        run: |
          echo "PYTHONPATH=${{ github.workspace }}/equipay/server/src" >> $GITHUB_ENV
          echo "FLASK_APP=src/server.py" >> $GITHUB_ENV

      - name: Verify Codecov token
        run: echo "Codecov token is ${{ secrets.CODECOV_TOKEN }}"
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: List files in the src directory
        run: ls -alh
        working-directory: ${{ github.workspace }}/equipay/server/src
        
      - name: Start Flask server
        run: flask run --host=0.0.0.0 &
        env:
          FLASK_ENV: development
        working-directory: ${{ github.workspace }}/equipay/server/src
        
      - name: Delay for Flask server to start
        run: sleep 5

      - name: Generate coverage report
        run: |
          coverage run -m unittest discover tests
          coverage xml -o coverage.xml  # Generate XML coverage report
        working-directory: ${{ github.workspace }}/equipay/server
        
      - name: Upload coverage reports to Codecov
        run: |
          codecov do-upload -t ${{ secrets.CODECOV_TOKEN }} -f coverage.xml -C $GITHUB_SHA
        env:
          GITHUB_SHA: ${{ github.sha }}
        working-directory: ${{ github.workspace }}/equipay/server
